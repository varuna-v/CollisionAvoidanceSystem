//*******************************************************
//* File:    C:/Users/User/Desktop/Third Year Project/CollisionAvoidanceSystem/QuadraticEquation.pd
//* Author:  Varuna
//* Created: 15:02:04 on Monday March 9th 2015 UTC
//*******************************************************

//!!rename to equation
class QuadraticEquation ^=
abstract
	
	var a : real;
	var b : real;
	var c : real;
	
interface
	
	function getXForMinimumValue : real
		//pre a > 0.0
		^= (let derivative ^= differentiateWRTx;
			((derivative.c * -1.0) / derivative.b));			
	
	function solve : real
		^= (let toBeRoot ^= (b*b)-(4*a*c);
			([toBeRoot < 0.0] : 100000.0,
			[] : (let r1 ^= ((-1.0*b) + ((toBeRoot)^(0.5)))/(2*a);
				  let r2 ^= ((-1.0*b) - ((toBeRoot)^(0.5)))/(2*a);
				  ([r1 > 0.0 & r1 <= r2]: r1,
				   [r2 > 0.0 & r2 < r1] : r2,
				   [] : 100000.0))));
	
	function differentiateWRTx : QuadraticEquation
		^= QuadraticEquation{0.0, 2.0 * a, b};
	
	operator +(other : QuadraticEquation) : QuadraticEquation
		^= QuadraticEquation{a + other.a, b + other.b, c + other.c};
		
	operator - (other : QuadraticEquation) : QuadraticEquation
		^= QuadraticEquation{a - other.a, b - other.b, c - other.c};
	
	redefine function toString : string
		^= "\n(" ++ a.toString ++ ") x^2 + (" ++ b.toString ++ ") x + (" ++ c.toString ++")";
	
	build{!a : real, !b : real, !c : real};
	
end;

// End
